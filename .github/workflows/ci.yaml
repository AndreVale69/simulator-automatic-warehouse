name: Test And Codecov

on:
  - push
  - pull_request

jobs:
  tests-codecov:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          pip install pytest-cov -r requirements.txt
      - name: Run tests and generate coverage report (ubuntu/macos)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: WAREHOUSE_CONFIGURATION_FILE_PATH="tests/test_config.yaml" PYTHONPATH=.:./tests pytest --cov ./src --cov-report=xml
      - name: Run tests and generate coverage report (windows)
        if: ${{ matrix.os == 'windows-latest'}}
        run: |
          $env:WAREHOUSE_CONFIGURATION_FILE_PATH="tests\test_config.yaml"
          $env:PYTHONPATH=Get-Location
          $env:PYTHONPATH+=':'
          $env:PYTHONPATH+=Get-Location
          $env:PYTHONPATH+='\tests'
          pytest --cov ./src --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.4.1
        with:
          directory: .
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage-service.xml,!./cache
          flags: unittests-${{ matrix.os }}-py${{ matrix.python-version }}
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
